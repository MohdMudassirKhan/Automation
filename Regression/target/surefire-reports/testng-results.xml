<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="87370" started-at="2019-12-21T11:20:39Z" finished-at="2019-12-21T11:22:07Z">
    <groups>
    </groups>
    <test name="TaubmanBasic" duration-ms="87370" started-at="2019-12-21T11:20:39Z" finished-at="2019-12-21T11:22:07Z">
      <class name="ParkCharge.Regression.TaubmanPrepod">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:ParkCharge.Regression.TaubmanPrepod@d8355a8]" name="beforeSuite" is-config="true" duration-ms="36996" started-at="2019-12-21T16:50:39Z" finished-at="2019-12-21T16:51:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="FAIL" signature="signUp()[pri:0, instance:ParkCharge.Regression.TaubmanPrepod@d8355a8]" name="signUp" duration-ms="50360" started-at="2019-12-21T16:51:16Z" finished-at="2019-12-21T16:52:07Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Cannot get a text value from a numeric cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Cannot get a text value from a numeric cell
	at org.apache.poi.xssf.usermodel.XSSFCell.typeMismatch(XSSFCell.java:855)
	at org.apache.poi.xssf.usermodel.XSSFCell.getRichStringCellValue(XSSFCell.java:299)
	at org.apache.poi.xssf.usermodel.XSSFCell.getStringCellValue(XSSFCell.java:251)
	at ParkCharge.Regression.TestBase.getData(TestBase.java:64)
	at ParkCharge.Regression.TaubmanPrepod.signUp(TaubmanPrepod.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUp -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:ParkCharge.Regression.TaubmanPrepod@d8355a8]" name="afterSuite" is-config="true" duration-ms="0" started-at="2019-12-21T16:52:07Z" finished-at="2019-12-21T16:52:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- ParkCharge.Regression.TaubmanPrepod -->
    </test> <!-- TaubmanBasic -->
  </suite> <!-- Suite -->
</testng-results>
